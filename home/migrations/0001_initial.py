# Generated by Django 4.2 on 2023-04-05 22:53

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Inspection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='InspectionCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=25)),
                ('category_desc', models.CharField(default=None, max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'Inspection Categories',
            },
        ),
        migrations.CreateModel(
            name='InspectionStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('desc', models.CharField(max_length=100)),
                ('color', models.CharField(max_length=7)),
                ('index', models.IntegerField(unique=True)),
            ],
            options={
                'verbose_name_plural': 'Inspection Statuses',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('address1', models.CharField(max_length=100)),
                ('address2', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=25)),
                ('postal', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dt', models.DateTimeField(auto_now=True)),
                ('mileage', models.DecimalField(decimal_places=2, max_digits=9)),
                ('location_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.location')),
            ],
        ),
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('desc', models.CharField(default=None, max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'Maintenance',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('license', models.CharField(max_length=50, null=True)),
            ],
            options={
                'verbose_name_plural': 'people',
            },
        ),
        migrations.CreateModel(
            name='Specification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('units', models.CharField(max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SpecificationCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=25)),
                ('category_desc', models.CharField(max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'Specification Categories',
            },
        ),
        migrations.CreateModel(
            name='VehicleSpecification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100)),
                ('url', models.CharField(max_length=100, null=True)),
                ('specification_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.specification')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('make', models.CharField(choices=[('Abarth', 'Abarth'), ('AR', 'Alfa Romeo'), ('AM', 'Aston Martin'), ('Audi', 'Audi'), ('Bentley', 'Bentley'), ('BMW', 'BMW'), ('Bugatti', 'Bugatti'), ('Cadillac', 'Cadillac'), ('Chevrolet', 'Chevrolet'), ('Chrysler', 'Chrysler'), ('Citroen', 'CitroÃ«n'), ('Dacia', 'Dacia'), ('Daewoo', 'Daewoo'), ('Daihatsu', 'Daihatsu'), ('Dodge', 'Dodge'), ('Donkervoort', 'Donkervoort'), ('DS', 'DS'), ('Ferrari', 'Ferrari'), ('Fiat', 'Fiat'), ('Fisker', 'Fisker'), ('Ford', 'Ford'), ('Honda', 'Honda'), ('Hummer', 'Hummer'), ('Hyundai', 'Hyundai'), ('Infiniti', 'Infiniti'), ('Iveco', 'Iveco'), ('Jaguar', 'Jaguar'), ('Jeep', 'Jeep'), ('Kia', 'Kia'), ('KTM', 'KTM'), ('Lada', 'Lada'), ('Lamborghini', 'Lamborghini'), ('Lancia', 'Lancia'), ('Land Rover', 'Land Rover'), ('Landwind', 'Landwind'), ('Lexus', 'Lexus'), ('Lotus', 'Lotus'), ('Maserati', 'Maserati'), ('Maybach', 'Maybach'), ('Mazda', 'Mazda'), ('McLaren', 'McLaren'), ('MB', 'Mercedes-Benz'), ('MG', 'MG'), ('Mini', 'Mini'), ('Mitsubishi', 'Mitsubishi'), ('Morgan', 'Morgan'), ('Nissan', 'Nissan'), ('Opel', 'Opel'), ('Peugeot', 'Peugeot'), ('Porsche', 'Porsche'), ('Renault', 'Renault'), ('RR', 'Rolls-Royce'), ('Rover', 'Rover'), ('Saab', 'Saab'), ('Seat', 'Seat'), ('Skoda', 'Skoda'), ('Smart', 'Smart'), ('SsangYong', 'SsangYong'), ('Subaru', 'Subaru'), ('Suzuki', 'Suzuki'), ('Tesla', 'Tesla'), ('Toyota', 'Toyota'), ('Volkswagen', 'Volkswagen'), ('Volvo', 'Volvo')], default='Abarth', max_length=25)),
                ('model', models.CharField(max_length=100)),
                ('vin', models.CharField(max_length=18)),
                ('nickname', models.CharField(max_length=50, null=True)),
                ('img', models.ImageField(null=True, upload_to='images/vehicles/')),
                ('primary_driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.person')),
            ],
        ),
        migrations.AddField(
            model_name='specification',
            name='category_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.specificationcategory'),
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=8)),
                ('comment', models.CharField(default=None, max_length=100, null=True)),
                ('log_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.log')),
                ('maintenance_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.maintenance')),
            ],
        ),
        migrations.AddField(
            model_name='log',
            name='vehicle_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.vehicle'),
        ),
        migrations.CreateModel(
            name='InspectionTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('desc_simple', models.CharField(max_length=255)),
                ('desc_detailed', models.TextField()),
                ('unit', models.CharField(max_length=10)),
                ('has_status', models.BooleanField(default=True)),
                ('category_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.inspectioncategory')),
            ],
        ),
        migrations.CreateModel(
            name='InspectionResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=50)),
                ('skipped', models.BooleanField(default=False)),
                ('notes', models.TextField()),
                ('inspection_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.inspection')),
                ('status_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='home.inspectionstatus')),
                ('task_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.inspectiontask')),
            ],
        ),
        migrations.AddField(
            model_name='inspection',
            name='inspector_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.person'),
        ),
        migrations.AddField(
            model_name='inspection',
            name='log_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.log'),
        ),
        migrations.CreateModel(
            name='Fuel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gallons', models.DecimalField(decimal_places=2, max_digits=6)),
                ('price_gal', models.DecimalField(decimal_places=3, max_digits=8)),
                ('total', models.DecimalField(decimal_places=3, max_digits=8)),
                ('missed_fill', models.BooleanField(default=False)),
                ('log_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.log')),
            ],
            options={
                'verbose_name_plural': 'Fuel',
            },
        ),
    ]
